{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/projetos-branch/sd-02-week13-movie-card-library-crud/src/pages/MovieDetails.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: ''\n    };\n  }\n\n  componentDidMount() {\n    movieAPI.getMovie(this.props.match.params.id).then(movie => this.setState({\n      movie\n    }));\n  }\n\n  render() {\n    const movie = this.state.movie;\n    if (!movie) return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n    const title = movie.title,\n          storyline = movie.storyline,\n          imagePath = movie.imagePath,\n          genre = movie.genre,\n          rating = movie.rating,\n          subtitle = movie.subtitle,\n          id = movie.id;\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 m7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"Movie Cover\",\n      src: \"../\".concat(imagePath),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, title)), React.createElement(\"div\", {\n      className: \"card-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Subtitle: \".concat(subtitle)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Storyline: \".concat(storyline)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Genre: \".concat(genre)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Rating: \".concat(rating))), React.createElement(\"div\", {\n      className: \"card-action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/movies/\".concat(id, \"/edit\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"EDITAR\"), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"VOLTAR\"), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: movieAPI.deleteMovie({\n        id\n      }).then(React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"APAGAR\")))));\n  }\n\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.number\n    })\n  }).isRequired\n};\nexport default MovieDetails;","map":{"version":3,"sources":["/home/lucaswerner/projetos-branch/sd-02-week13-movie-card-library-crud/src/pages/MovieDetails.js"],"names":["React","Component","PropTypes","Link","Redirect","movieAPI","Loading","MovieDetails","constructor","props","state","movie","componentDidMount","getMovie","match","params","id","then","setState","render","title","storyline","imagePath","genre","rating","subtitle","deleteMovie","propTypes","shape","number","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { movie: '' };\n  }\n\n  componentDidMount() {\n    movieAPI.getMovie(this.props.match.params.id)\n      .then((movie) => this.setState({ movie }));\n  }\n\n  render() {\n    const { movie } = this.state;\n    if (!movie) return <Loading />;\n\n    const {\n      title, storyline, imagePath, genre, rating, subtitle, id,\n    } = movie;\n    return (\n      <div className=\"row\">\n        <div className=\"col s12 m7\">\n          <div className=\"card\">\n            <div className=\"card-image\">\n              <img alt=\"Movie Cover\" src={`../${imagePath}`} />\n              <span className=\"card-title\">{title}</span>\n            </div>\n            <div className=\"card-content\">\n              <p>{`Subtitle: ${subtitle}`}</p>\n              <p>{`Storyline: ${storyline}`}</p>\n              <p>{`Genre: ${genre}`}</p>\n              <p>{`Rating: ${rating}`}</p>\n            </div>\n            <div className=\"card-action\">\n              <Link to={`/movies/${id}/edit`}>EDITAR</Link>\n              <Link to=\"/\">VOLTAR</Link>\n              <button type=\"button\" onClick={movieAPI.deleteMovie({ id }).then(<Redirect to=\"/\" />)}>\n              APAGAR\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({ id: PropTypes.number }),\n  }).isRequired,\n};\n\nexport default MovieDetails;\n"]},"metadata":{},"sourceType":"module"}