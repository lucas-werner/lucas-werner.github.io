{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/projetos-branch/sd-02-week13-movie-card-library-crud/src/pages/EditMovie.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { MovieForm, Loading } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: \"loading\",\n      shouldRedirect: '',\n      movie: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(updatedMovie) {\n    this.setState(state => {\n      state = {\n        status: '',\n        shouldRedirect: true,\n        movie: updatedMovie\n      };\n    });\n  }\n\n  componentDidMount() {\n    movieAPI.updateMovie(this.props.match.params.id).then(movie => this.setState({\n      status: '',\n      shouldRedirect: '',\n      movie: movie\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          status = _this$state.status,\n          shouldRedirect = _this$state.shouldRedirect,\n          movie = _this$state.movie;\n\n    if (shouldRedirect) {\n      React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    }\n\n    if (status === 'loading') {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(MovieForm, {\n      movie: movie,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default EditMovie;","map":{"version":3,"sources":["/home/lucaswerner/projetos-branch/sd-02-week13-movie-card-library-crud/src/pages/EditMovie.js"],"names":["React","Component","Redirect","MovieForm","Loading","movieAPI","EditMovie","constructor","props","state","status","shouldRedirect","movie","handleSubmit","bind","updatedMovie","setState","componentDidMount","updateMovie","match","params","id","then","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,eAAnC;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAChCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,SADG;AAEXC,MAAAA,cAAc,EAAE,EAFL;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAIDD,EAAAA,YAAY,CAACE,YAAD,EAAe;AACzB,SAAKC,QAAL,CAAeP,KAAD,IAAW;AACvBA,MAAAA,KAAK,GAAG;AACNC,QAAAA,MAAM,EAAE,EADF;AAENC,QAAAA,cAAc,EAAE,IAFV;AAGNC,QAAAA,KAAK,EAAEG;AAHD,OAAR;AAKD,KAND;AAQD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClBZ,IAAAA,QAAQ,CAACa,WAAT,CAAqB,KAAKV,KAAL,CAAWW,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7C,EACGC,IADH,CACSV,KAAD,IAAW,KAAKI,QAAL,CAAc;AAC7BN,MAAAA,MAAM,EAAE,EADqB;AAE7BC,MAAAA,cAAc,EAAE,EAFa;AAETC,MAAAA,KAAK,EAAEA;AAFE,KAAd,CADnB;AAMD;;AAGDW,EAAAA,MAAM,GAAG;AAAA,wBAEmC,KAAKd,KAFxC;AAAA,UAECC,MAFD,eAECA,MAFD;AAAA,UAESC,cAFT,eAESA,cAFT;AAAA,UAEyBC,KAFzB,eAEyBA,KAFzB;;AAGP,QAAID,cAAJ,EAAoB;AAClB,0BAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD;;AAED,QAAID,MAAM,KAAK,SAAf,EAA0B;AACxB,aACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;AAED,WACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEE,KAAlB;AAAyB,MAAA,QAAQ,EAAE,KAAKC,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAlD+B;;AAqDlC,eAAeP,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport { MovieForm, Loading } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: \"loading\",\n      shouldRedirect: '',\n      movie: '',\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n\n\n  handleSubmit(updatedMovie) {\n    this.setState((state) => {\n      state = {\n        status: '',\n        shouldRedirect: true,\n        movie: updatedMovie,\n      }\n    },\n    )\n  }\n\n  componentDidMount() {\n    movieAPI.updateMovie(this.props.match.params.id)\n      .then((movie) => this.setState({\n        status: '',\n        shouldRedirect: '', movie: movie,\n      },\n      ));\n  }\n\n\n  render() {\n\n    const { status, shouldRedirect, movie } = this.state;\n    if (shouldRedirect) {\n      <Redirect to=\"/\" />\n    }\n\n    if (status === 'loading') {\n      return (\n        <Loading />\n      );\n    }\n\n    return (\n      <MovieForm movie={movie} onSubmit={this.handleSubmit} />\n    );\n  }\n}\n\nexport default EditMovie;\n"]},"metadata":{},"sourceType":"module"}