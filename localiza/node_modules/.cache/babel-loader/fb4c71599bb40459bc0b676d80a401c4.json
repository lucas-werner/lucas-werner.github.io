{"ast":null,"code":"var _jsxFileName = \"/home/lucaswerner/repositories/projetos-branch/sd-02-week13-movie-card-library-crud/src/pages/EditMovie.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { MovieForm, Loading } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'loading',\n      shouldRedirect: '',\n      movie: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    movieAPI.getMovie(this.props.match.params.id).then(movie => this.setState({\n      status: '',\n      shouldRedirect: '',\n      movie\n    }));\n  }\n\n  componentDidUpdate() {\n    return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  }\n\n  handleSubmit(updatedMovie) {\n    movieAPI.updateMovie(updatedMovie);\n    this.setState({\n      status: '',\n      shouldRedirect: true,\n      movie: updatedMovie\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          status = _this$state.status,\n          shouldRedirect = _this$state.shouldRedirect,\n          movie = _this$state.movie;\n\n    if (shouldRedirect) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    }\n\n    if (status === 'loading') {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(MovieForm, {\n      movie: movie,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n  }\n\n}\n\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.number\n    })\n  }).isRequired\n};\nexport default EditMovie;","map":{"version":3,"sources":["/home/lucaswerner/repositories/projetos-branch/sd-02-week13-movie-card-library-crud/src/pages/EditMovie.js"],"names":["React","Component","PropTypes","Redirect","MovieForm","Loading","movieAPI","EditMovie","constructor","props","state","status","shouldRedirect","movie","handleSubmit","bind","componentDidMount","getMovie","match","params","id","then","setState","componentDidUpdate","updatedMovie","updateMovie","render","propTypes","shape","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,eAAnC;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAChCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,SADG;AAEXC,MAAAA,cAAc,EAAE,EAFL;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBV,IAAAA,QAAQ,CAACW,QAAT,CAAkB,KAAKR,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,CAAwBC,EAA1C,EACGC,IADH,CACSR,KAAD,IAAW,KAAKS,QAAL,CAAc;AAC7BX,MAAAA,MAAM,EAAE,EADqB;AAE7BC,MAAAA,cAAc,EAAE,EAFa;AAG7BC,MAAAA;AAH6B,KAAd,CADnB;AAMD;;AAEDU,EAAAA,kBAAkB,GAAG;AACnB,WACE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAEDT,EAAAA,YAAY,CAACU,YAAD,EAAe;AACzBlB,IAAAA,QAAQ,CAACmB,WAAT,CAAqBD,YAArB;AACA,SAAKF,QAAL,CAAc;AAAEX,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,cAAc,EAAE,IAA9B;AAAoCC,MAAAA,KAAK,EAAEW;AAA3C,KAAd;AACD;;AAEDE,EAAAA,MAAM,GAAG;AAAA,wBACmC,KAAKhB,KADxC;AAAA,UACCC,MADD,eACCA,MADD;AAAA,UACSC,cADT,eACSA,cADT;AAAA,UACyBC,KADzB,eACyBA,KADzB;;AAEP,QAAID,cAAJ,EAAoB;AAClB,aACE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;AAED,QAAID,MAAM,KAAK,SAAf,EAA0B;AACxB,aACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;AAED,WACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEE,KAAlB;AAAyB,MAAA,QAAQ,EAAE,KAAKC,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAhD+B;;AAmDlCP,SAAS,CAACoB,SAAV,GAAsB;AACpBT,EAAAA,KAAK,EAAEhB,SAAS,CAAC0B,KAAV,CAAgB;AACrBT,IAAAA,MAAM,EAAEjB,SAAS,CAAC0B,KAAV,CAAgB;AAAER,MAAAA,EAAE,EAAElB,SAAS,CAAC2B;AAAhB,KAAhB;AADa,GAAhB,EAEJC;AAHiB,CAAtB;AAMA,eAAevB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { MovieForm, Loading } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'loading',\n      shouldRedirect: '',\n      movie: '',\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    movieAPI.getMovie(this.props.match.params.id)\n      .then((movie) => this.setState({\n        status: '',\n        shouldRedirect: '',\n        movie,\n      }));\n  }\n\n  componentDidUpdate() {\n    return (\n      <Redirect to=\"/\" />\n    );\n  }\n\n  handleSubmit(updatedMovie) {\n    movieAPI.updateMovie(updatedMovie);\n    this.setState({ status: '', shouldRedirect: true, movie: updatedMovie });\n  }\n\n  render() {\n    const { status, shouldRedirect, movie } = this.state;\n    if (shouldRedirect) {\n      return (\n        <Redirect to=\"/\" />\n      );\n    }\n\n    if (status === 'loading') {\n      return (\n        <Loading />\n      );\n    }\n\n    return (\n      <MovieForm movie={movie} onSubmit={this.handleSubmit} />\n    );\n  }\n}\n\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({ id: PropTypes.number }),\n  }).isRequired,\n};\n\nexport default EditMovie;\n"]},"metadata":{},"sourceType":"module"}